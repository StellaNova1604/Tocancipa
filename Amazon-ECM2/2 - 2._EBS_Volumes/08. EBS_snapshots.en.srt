1
00:00:01.02 --> 00:00:02.06
- [Instructor] Welcome back.

2
00:00:02.06 --> 00:00:04.04
In this video, we're gonna look at

3
00:00:04.04 --> 00:00:07.07
the concepts of EBS snapshots.

4
00:00:07.07 --> 00:00:11.00
Let's begin.

5
00:00:11.00 --> 00:00:14.06
Alright, so what do we
mean by EBS snapshots?

6
00:00:14.06 --> 00:00:18.02
Amazon EBS, also known
as Elastic Block Store,

7
00:00:18.02 --> 00:00:21.05
provides the ability to create snapshots,

8
00:00:21.05 --> 00:00:23.04
or in other words, backups,

9
00:00:23.04 --> 00:00:25.07
of any EBS volume

10
00:00:25.07 --> 00:00:30.03
and write a copy of the data
in the volume to Amazon S3

11
00:00:30.03 --> 00:00:32.01
where it is stored redundantly

12
00:00:32.01 --> 00:00:35.05
in multiple Availability Zones.

13
00:00:35.05 --> 00:00:37.04
These snapshots can be used

14
00:00:37.04 --> 00:00:41.00
to create multiple new EBS volumes

15
00:00:41.00 --> 00:00:45.08
or to move volumes across
Availability Zones.

16
00:00:45.08 --> 00:00:47.06
The snapshots can be shared

17
00:00:47.06 --> 00:00:52.07
with specific AWS accounts
or even made public.

18
00:00:52.07 --> 00:00:54.03
When you create snapshots,

19
00:00:54.03 --> 00:00:57.08
you incur charges in Amazon S3

20
00:00:57.08 --> 00:01:02.06
based on the volume's total size.

21
00:01:02.06 --> 00:01:05.03
Snapshots are incremental backups,

22
00:01:05.03 --> 00:01:07.09
which means only the blocks on the device

23
00:01:07.09 --> 00:01:13.07
that have changed after your
most recent snapshot are saved.

24
00:01:13.07 --> 00:01:17.06
This minimizes the time
required to create the snapshot

25
00:01:17.06 --> 00:01:22.08
and saves on storage cost
by not duplicating data.

26
00:01:22.08 --> 00:01:24.04
When you delete a snapshot,

27
00:01:24.04 --> 00:01:28.03
only the data unique to
that snapshot is removed.

28
00:01:28.03 --> 00:01:31.02
Each snapshot contains
all of the information

29
00:01:31.02 --> 00:01:33.04
needed to restore your data

30
00:01:33.04 --> 00:01:36.01
from the moment when
the snapshot was taken

31
00:01:36.01 --> 00:01:41.01
to a new EBS volume.

32
00:01:41.01 --> 00:01:44.05
When you create an EBS
volume based on a snapshot,

33
00:01:44.05 --> 00:01:47.08
the new volume begins as an exact replica

34
00:01:47.08 --> 00:01:52.06
of the original volume that was
used to create the snapshot.

35
00:01:52.06 --> 00:01:56.05
The replicated volume loads
data lazily in the background

36
00:01:56.05 --> 00:02:00.04
so that you can begin
using it immediately.

37
00:02:00.04 --> 00:02:04.02
However, if you access data
that hasn't been loaded yet,

38
00:02:04.02 --> 00:02:05.08
the volume immediately downloads

39
00:02:05.08 --> 00:02:08.06
the requested data from Amazon S3,

40
00:02:08.06 --> 00:02:10.02
and then continues loading the rest

41
00:02:10.02 --> 00:02:15.01
of the volume's data in the background.

42
00:02:15.01 --> 00:02:17.03
Alright, I have a diagram on the screen

43
00:02:17.03 --> 00:02:21.07
that shows you how snapshots
actually store the data.

44
00:02:21.07 --> 00:02:24.08
We have a volume which
is known as volume one,

45
00:02:24.08 --> 00:02:28.01
and we are representing
three states of the volume,

46
00:02:28.01 --> 00:02:32.04
state one, state two, and state three.

47
00:02:32.04 --> 00:02:36.08
In state one, volume
one has 10 gigs of data.

48
00:02:36.08 --> 00:02:39.02
At that point, we take a snapshot,

49
00:02:39.02 --> 00:02:41.09
and that is called as snap A.

50
00:02:41.09 --> 00:02:44.09
Snap A will have 10 gigs of data,

51
00:02:44.09 --> 00:02:48.00
because this is the initial snapshot.

52
00:02:48.00 --> 00:02:50.00
After snap A was taken,

53
00:02:50.00 --> 00:02:54.04
we change four gigs of data on volume one.

54
00:02:54.04 --> 00:02:56.04
After changing four gigs of data,

55
00:02:56.04 --> 00:03:00.00
we take another snapshot called snap B.

56
00:03:00.00 --> 00:03:04.07
In this case, snap B will
contain four gigs of data,

57
00:03:04.07 --> 00:03:06.09
and for the remaining six gigs of data,

58
00:03:06.09 --> 00:03:10.05
it will reference snap A.

59
00:03:10.05 --> 00:03:12.02
After taking snap B,

60
00:03:12.02 --> 00:03:15.04
we then added two gigs of data.

61
00:03:15.04 --> 00:03:20.00
So at this point volume
one has 12 gigs of data,

62
00:03:20.00 --> 00:03:24.01
and now we take a new
snapshot called snap C.

63
00:03:24.01 --> 00:03:29.00
In this case, snap C would
have two gigs of data.

64
00:03:29.00 --> 00:03:33.00
For the four gigs of data,
it would reference snap B,

65
00:03:33.00 --> 00:03:39.03
and for the six gigs of data,
it would reference snap A.

66
00:03:39.03 --> 00:03:43.06
As you can see, this method
helps you save on storage cost,

67
00:03:43.06 --> 00:03:46.07
because otherwise snap A would be 10 gigs,

68
00:03:46.07 --> 00:03:51.05
snap B would be 10 gigs,
and snap C would be 12 gigs,

69
00:03:51.05 --> 00:03:53.08
a total of 32 gigs.

70
00:03:53.08 --> 00:03:56.09
However, in this case, snap A is 10 gigs,

71
00:03:56.09 --> 00:04:02.03
snap B is four gigs,
and snap C is two gigs,

72
00:04:02.03 --> 00:04:04.01
which is 16 gigs of data,

73
00:04:04.01 --> 00:04:09.09
which is half of the original one.

74
00:04:09.09 --> 00:04:14.01
Moving on, let's talk about
copying and sharing snapshots.

75
00:04:14.01 --> 00:04:17.01
Snapshots can be copied across regions,

76
00:04:17.01 --> 00:04:19.08
making it possible to use multiple regions

77
00:04:19.08 --> 00:04:23.01
for geographical expansion,
data center migration,

78
00:04:23.01 --> 00:04:25.09
and disaster recovery.

79
00:04:25.09 --> 00:04:29.02
Unencrypted snapshots can
be shared with co-workers,

80
00:04:29.02 --> 00:04:34.04
AWS Community users or even made public.

81
00:04:34.04 --> 00:04:37.01
You can make copies of your own snapshots

82
00:04:37.01 --> 00:04:41.02
as well as snapshots that
have been shared with you.

83
00:04:41.02 --> 00:04:44.05
However, encrypted
snapshots can only be shared

84
00:04:44.05 --> 00:04:50.00
with specific AWS accounts and
you cannot make them public.

85
00:04:50.00 --> 00:04:53.05
For other users to be able to
use the encrypted snapshot,

86
00:04:53.05 --> 00:04:57.01
you must also share the
custom encryption key

87
00:04:57.01 --> 00:04:59.06
used to encrypt the snapshot,

88
00:04:59.06 --> 00:05:05.03
and we'll be seeing all of
this stuff in the next video.

89
00:05:05.03 --> 00:05:08.08
Let's talk about encryption
support for snapshots.

90
00:05:08.08 --> 00:05:14.01
Snapshots of encrypted volumes
are automatically encrypted.

91
00:05:14.01 --> 00:05:18.01
In the last video, we saw
that volumes can be encrypted

92
00:05:18.01 --> 00:05:20.07
at the time of creating them.

93
00:05:20.07 --> 00:05:23.00
You can encrypt them when
you're adding a new volume

94
00:05:23.00 --> 00:05:26.05
to the EC2 instance at the
time of launching the instance,

95
00:05:26.05 --> 00:05:28.08
or otherwise when you're
creating a new volume

96
00:05:28.08 --> 00:05:31.02
from the Volumes tab.

97
00:05:31.02 --> 00:05:33.07
So, snapshots of encrypted volumes

98
00:05:33.07 --> 00:05:35.07
are automatically encrypted

99
00:05:35.07 --> 00:05:39.01
and volumes that are created
from encrypted snapshots

100
00:05:39.01 --> 00:05:42.05
are also automatically encrypted.

101
00:05:42.05 --> 00:05:46.00
When you copy an unencrypted
snapshot that you own,

102
00:05:46.00 --> 00:05:50.06
you have the option to encrypt
it during the copy process.

103
00:05:50.06 --> 00:05:54.00
When you copy an encrypted
snapshot that you own,

104
00:05:54.00 --> 00:05:57.00
you can re-encrypt it with a different key

105
00:05:57.00 --> 00:05:59.08
during the copy process.

106
00:05:59.08 --> 00:06:02.07
Don't freak out if it
sounds too confusing.

107
00:06:02.07 --> 00:06:04.00
I know it does.

108
00:06:04.00 --> 00:06:05.00
In the next video,

109
00:06:05.00 --> 00:06:08.08
I am going to show you all
of this live in action.

110
00:06:08.08 --> 00:06:12.06
Right now, we're just
looking at the concepts.

111
00:06:12.06 --> 00:06:14.04
Creating snapshots.

112
00:06:14.04 --> 00:06:18.00
Snapshots occur asynchronously.

113
00:06:18.00 --> 00:06:21.03
The point-in-time snapshot
is created immediately,

114
00:06:21.03 --> 00:06:23.09
but the status of the snapshot is pending

115
00:06:23.09 --> 00:06:26.04
until the snapshot is complete,

116
00:06:26.04 --> 00:06:29.05
and this happens when all
of the modified blocks

117
00:06:29.05 --> 00:06:33.04
have been transferred to Amazon S3.

118
00:06:33.04 --> 00:06:37.04
This can take several hours
for large initial snapshots

119
00:06:37.04 --> 00:06:41.09
or subsequent snapshots where
many blocks have changed.

120
00:06:41.09 --> 00:06:43.06
While this is being completed,

121
00:06:43.06 --> 00:06:46.09
an in-progress snapshot is not affected

122
00:06:46.09 --> 00:06:53.01
by ongoing reads and writes to the volume.

123
00:06:53.01 --> 00:06:55.06
We can take a snapshot
of an attached volume

124
00:06:55.06 --> 00:06:58.06
that is in use, and this is fantastic

125
00:06:58.06 --> 00:07:00.06
because we don't have to remove the volume

126
00:07:00.06 --> 00:07:04.00
from the EC2 instance
before taking the snapshot.

127
00:07:04.00 --> 00:07:07.04
We can do it while it is being used.

128
00:07:07.04 --> 00:07:10.06
However, snapshots only capture data

129
00:07:10.06 --> 00:07:13.09
that have been written
to your Amazon EBS volume

130
00:07:13.09 --> 00:07:18.04
at the time the snapshot
command was issued.

131
00:07:18.04 --> 00:07:22.03
However, if there's any data
that is sitting in the cache,

132
00:07:22.03 --> 00:07:25.09
that will not be found on the snapshot.

133
00:07:25.09 --> 00:07:27.04
For complete snapshots,

134
00:07:27.04 --> 00:07:31.07
file writes to volumes should be paused.

135
00:07:31.07 --> 00:07:35.04
However, if you cannot pause
all file writes to the volume,

136
00:07:35.04 --> 00:07:39.05
you should unmount the volume
from within the instance,

137
00:07:39.05 --> 00:07:43.00
issue the snapshot command,
and then remount the volume

138
00:07:43.00 --> 00:07:46.07
to ensure a consistent
and complete snapshot.

139
00:07:46.07 --> 00:07:48.00
Very important.

140
00:07:48.00 --> 00:07:50.07
To create a snapshot for an EBS volume

141
00:07:50.07 --> 00:07:53.01
that serves as a root device,

142
00:07:53.01 --> 00:07:57.08
you should stop the instance
before taking the snapshot.

143
00:07:57.08 --> 00:07:59.07
Well, that's it for this video.

144
00:07:59.07 --> 00:08:01.09
In the next video we'll be implementing

145
00:08:01.09 --> 00:08:05.02
all of these concepts on the AWS Console.

146
00:08:05.02 --> 00:08:06.06
I'm excited to see you there,

147
00:08:06.06 --> 00:08:08.07
and I'd like to thank you for watching.

148
00:08:08.07 --> 00:08:09.06
Thank you.

